import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "dbusmodel.h"
        name: "DbusModel"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["DbusModel/Dbus 1.0"]
        exportMetaObjectRevisions: [256]
        Signal {
            name: "newSensorData"
            Parameter { name: "keys"; type: "QStringList" }
            Parameter { name: "values"; type: "QVariantList" }
        }
        Method {
            name: "allSensors"
            type: "QStringList"
            Parameter { name: "filter"; type: "QString" }
        }
        Method {
            name: "maxValue"
            type: "double"
            Parameter { name: "key"; type: "QString" }
        }
        Method {
            name: "unitValue"
            type: "double"
            Parameter { name: "key"; type: "QString" }
        }
        Method {
            name: "doubleData"
            type: "double"
            Parameter { name: "key"; type: "QString" }
        }
        Method {
            name: "stringData"
            type: "QString"
            Parameter { name: "key"; type: "QString" }
        }
        Method {
            name: "subscribe"
            Parameter { name: "args"; type: "QStringList" }
        }
        Method {
            name: "unsubscribe"
            Parameter { name: "args"; type: "QStringList" }
        }
        Method {
            name: "execCmd"
            Parameter { name: "cmd"; type: "QString" }
            Parameter { name: "args"; type: "QStringList" }
        }
        Method { name: "battStatus"; type: "bool" }
        Method {
            name: "newSensorData"
            Parameter { name: "arg"; type: "QDBusMessage" }
        }
    }
    Component {
        file: "qobject.h"
        name: "QObject"
        accessSemantics: "reference"
        Property {
            name: "objectName"
            type: "QString"
            bindable: "bindableObjectName"
            read: "objectName"
            write: "setObjectName"
            notify: "objectNameChanged"
            index: 0
        }
        Signal {
            name: "destroyed"
            Parameter { type: "QObject"; isPointer: true }
        }
        Signal { name: "destroyed"; isCloned: true }
        Signal {
            name: "objectNameChanged"
            Parameter { name: "objectName"; type: "QString" }
        }
        Method { name: "deleteLater" }
        Method {
            name: "QObject"
            isConstructor: true
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method { name: "QObject"; isCloned: true; isConstructor: true }
    }
}
